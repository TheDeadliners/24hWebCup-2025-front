{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/babas/Documents/Projets/24hWebCup-2025-front/app/%28root%29/%28backoffice%29/%28builder%29/form/page.tsx"],"sourcesContent":["\"use client\";\r\nimport { useState } from \"react\";\r\n\r\nconst FormPage = () => {\r\n    // Données fictives pour tester le formulaire\r\n    const [formData, setFormData] = useState({\r\n        name: \"Clarel GRONDIN\",\r\n        email: \"john.doe@example.com\",\r\n        message: \"Ceci est un message de test.\"\r\n    });\r\n\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n        const { name, value } = e.target;\r\n        setFormData((prevData) => ({\r\n            ...prevData,\r\n            [name]: value\r\n        }));\r\n    };\r\n\r\n    const handleSubmit = async (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        setIsSubmitting(true);\r\n\r\n        // Simuler l'appel API vers Symfony\r\n        setTimeout(() => {\r\n            console.log(\"Données envoyées : \", formData);\r\n            // Ici, tu enverrais les données à ton backend Symfony\r\n            // Par exemple : fetch('/api/submit', { method: 'POST', body: JSON.stringify(formData) });\r\n\r\n            // Réinitialisation après envoi fictif\r\n            setIsSubmitting(false);\r\n        }, 1000);\r\n    };\r\n\r\n    return (\r\n        <div className=\"max-w-3xl mx-auto p-6 bg-black rounded-lg shadow-md\">\r\n            <h2 className=\"text-2xl font-bold mb-4\">Builder</h2>\r\n            <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n                {/* Champ nom */}\r\n                <div>\r\n                    <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">Nom</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"name\"\r\n                        name=\"name\"\r\n                        value={formData.name}\r\n                        onChange={handleChange}\r\n                        className=\"mt-1 block w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-primary focus:border-primary\"\r\n                    />\r\n                </div>\r\n\r\n                {/* Champ email */}\r\n                <div>\r\n                    <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">Email</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        value={formData.email}\r\n                        onChange={handleChange}\r\n                        className=\"mt-1 block w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-primary focus:border-primary\"\r\n                    />\r\n                </div>\r\n\r\n                {/* Champ message */}\r\n                <div>\r\n                    <label htmlFor=\"message\" className=\"block text-sm font-medium text-gray-700\">Message</label>\r\n                    <textarea\r\n                        id=\"message\"\r\n                        name=\"message\"\r\n                        value={formData.message}\r\n                        onChange={handleChange}\r\n                        rows={4}\r\n                        className=\"mt-1 block w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-primary focus:border-primary\"\r\n                    ></textarea>\r\n                </div>\r\n\r\n                {/* Bouton de soumission */}\r\n                <div>\r\n                    <button\r\n                        type=\"submit\"\r\n                        disabled={isSubmitting}\r\n                        className=\"w-full py-2 px-4 bg-primary text-white rounded-md hover:bg-primary-dark focus:outline-none focus:ring-2 focus:ring-primary focus:ring-opacity-50\"\r\n                    >\r\n                        {isSubmitting ? \"Envoi...\" : \"Envoyer\"}\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FormPage;\r\n"],"names":[],"mappings":";;;;AACA;AADA;;;AAGA,MAAM,WAAW;IACb,6CAA6C;IAC7C,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QACrC,MAAM;QACN,OAAO;QACP,SAAS;IACb;IAEA,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEjD,MAAM,eAAe,CAAC;QAClB,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM;QAChC,YAAY,CAAC,WAAa,CAAC;gBACvB,GAAG,QAAQ;gBACX,CAAC,KAAK,EAAE;YACZ,CAAC;IACL;IAEA,MAAM,eAAe,OAAO;QACxB,EAAE,cAAc;QAChB,gBAAgB;QAEhB,mCAAmC;QACnC,WAAW;YACP,QAAQ,GAAG,CAAC,uBAAuB;YACnC,sDAAsD;YACtD,0FAA0F;YAE1F,sCAAsC;YACtC,gBAAgB;QACpB,GAAG;IACP;IAEA,qBACI,8OAAC;QAAI,WAAU;;0BACX,8OAAC;gBAAG,WAAU;0BAA0B;;;;;;0BACxC,8OAAC;gBAAK,UAAU;gBAAc,WAAU;;kCAEpC,8OAAC;;0CACG,8OAAC;gCAAM,SAAQ;gCAAO,WAAU;0CAA0C;;;;;;0CAC1E,8OAAC;gCACG,MAAK;gCACL,IAAG;gCACH,MAAK;gCACL,OAAO,SAAS,IAAI;gCACpB,UAAU;gCACV,WAAU;;;;;;;;;;;;kCAKlB,8OAAC;;0CACG,8OAAC;gCAAM,SAAQ;gCAAQ,WAAU;0CAA0C;;;;;;0CAC3E,8OAAC;gCACG,MAAK;gCACL,IAAG;gCACH,MAAK;gCACL,OAAO,SAAS,KAAK;gCACrB,UAAU;gCACV,WAAU;;;;;;;;;;;;kCAKlB,8OAAC;;0CACG,8OAAC;gCAAM,SAAQ;gCAAU,WAAU;0CAA0C;;;;;;0CAC7E,8OAAC;gCACG,IAAG;gCACH,MAAK;gCACL,OAAO,SAAS,OAAO;gCACvB,UAAU;gCACV,MAAM;gCACN,WAAU;;;;;;;;;;;;kCAKlB,8OAAC;kCACG,cAAA,8OAAC;4BACG,MAAK;4BACL,UAAU;4BACV,WAAU;sCAET,eAAe,aAAa;;;;;;;;;;;;;;;;;;;;;;;AAMrD;uCAEe","debugId":null}},
    {"offset": {"line": 179, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/babas/Documents/Projets/24hWebCup-2025-front/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0],"debugId":null}}]
}